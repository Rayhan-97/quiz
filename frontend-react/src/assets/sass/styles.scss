@use 'sass:math';
@use 'sass:color';
@use 'sass:map';
@use 'sass:list';

@import url('https://fonts.googleapis.com/css2?family=Outfit:wght@400;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;700&display=swap');

@function stripUnits($number) {
    @return math.div($number, ($number * 0 + 1));
}

@function toRem($pixelValue) {
    @return math.div(stripUnits($pixelValue), 16) * 1rem;
}

@mixin flexCentre($direction: row) {
    display: flex;
    flex-direction: $direction;
    justify-content: center;
    align-items: center;
}


// **************
// --------------------COLORS-------------------------------
// **************
$white-blue: rgb(232, 240, 254);

$white-100: hsl(0, 0%, 100%);
$white-73: hsl(0, 0%, 73%);
$black-63: hsl(0, 0%, 37%);
$errorRed: #DF0000;
$primary: hsl(253, 51%, 43%);
$disabled: rgb(120, 112, 233, 0.3);
$outline: #{color.adjust($color: $primary, $hue: 180)}; // complement of $primary

$colors: (
    'light': ('bg': hsl(0, 0%, 96%),
        'bg-contrast': hsl(0, 0%, 100%),
        'fg': hsl(0, 0%, 0%) '0, 0, 0',
        'fg-light': hsl(0, 0%, 9%),
        'primary': hsl(253, 51%, 43%),
        'nav': hsl(253, 51%, 43%),
        'input-bg': $white-blue,
        'icon': $black-63,
        'icon-bg': rgba($white-73, $alpha: 0.2),

    ),
    'dark': ('bg': hsl(0, 0%, 9%),
        'bg-contrast': hsl(0, 0%, 0%),
        'fg': hsl(0, 0%, 100%) '255, 255, 255',
        'fg-light': hsl(0, 0%, 73%),
        'primary': hsl(253, 51%, 43%),
        'nav': hsl(0, 0%, 0%),
        'input-bg': hsl(0, 0%, 14%),
        'icon': $white-73,
        'icon-bg': rgba($white-73, $alpha: 0.2),
    )
);

@function themedColor($colorName) {
    @return var(--#{$colorName});
}

$themeMap: null;

@mixin themify() {
    @each $theme, $localThemeMap in $colors {
        .theme-#{$theme} {
            $themeMap: $localThemeMap !global;
            @content
        }
    }
}

@function t($key, $index: 1) {
    $colorValues: map-get($map: $themeMap, $key: $key);
    @return nth($colorValues, $index);
}

:root {
    .theme-light {
        @each $colorVar, $values in map-get($map: $colors, $key: 'light') {
            $suffixes: (
                '',
                '-rgb',
            );

        @for $i from 1 through length($values) {
            $cssVariableName: --#{$colorVar}#{nth($suffixes, $i)};
            #{$cssVariableName}: #{nth($values, $i)};
        }
    }
}

.theme-dark {
    @each $colorVar, $values in map-get($map: $colors, $key: 'dark') {
        $suffixes: (
            '',
            '-rgb',
        );

    @for $i from 1 through length($values) {
        $cssVariableName: --#{$colorVar}#{nth($suffixes, $i)};
        #{$cssVariableName}: #{nth($values, $i)};
    }
}
}
}
//                                            **************
// --------------------COLORS-------------------------------
//                                            **************


// **************
// --------------------RESET-------------------------------
// **************
/* Reset some basic elements */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: "Roboto", sans-serif;
    font-size: 1rem;
    line-height: 1.2rem;

    :focus {
        outline: transparent;
    }

    :focus-visible {
        outline: solid toRem(2px) $outline;
        outline-offset: toRem(4px);
    }
}

@include themify() {

    &,
    input {
        color: t(fg);
    }
}

h1,
h2,
h3,
h4,
h5 {
    font-family: "Outfit", sans-serif;
    font-size: toRem(42px);
    line-height: toRem(44px);
}
//                                           **************
// --------------------RESET-------------------------------
//                                           **************


// **************
// --------------------LAYOUT & THEME------------------------
// **************
.theme-light {
    .form-container {
        border: 1px solid themedColor(fg);
    }
    input {
        border: 1px solid themedColor(fg);
    }

    button.primary {
        color: $white-100;
    }
}

.content-container {
    display: flex;
    justify-content: center;
    padding: 2em 1em;
}
//                                           **************
// --------------------LAYOUT & THEME----------------------
//                                           **************

// **************
// --------------------NAVIGATION-------------------------------
// **************
.nav-container {
    container: navbar / inline-size;
    @include flexCentre(column);
}

nav {
    @include flexCentre();
    justify-content: space-between;
    width: 100%;
    padding: 0.5em 1em;
    background-color: themedColor(nav);
    border-bottom: 1px solid themedColor(fg);

    div {
        @include flexCentre();
        gap: toRem(20px);
    }

    a:has(.full-logo),
    a:has(button) {
        display: none;
    }
}

menu {
    @include flexCentre();
    flex-wrap: wrap;
    width: 100%;
    gap: toRem(20px);
    padding: 1.2em;
    background-color: themedColor(bg);
    border-bottom: 1px solid themedColor(fg);
}

@container navbar (min-width: 40em) {
    nav {
        width: min(calc(100% - 2em), 60em);
        border-radius: toRem(30px);
        border: none;
        padding: 1em 1.5em;
        margin-top: 1em;

        a:has(.full-logo),
        a:has(button) {
            display: block;
        }

        a:has(.logo) {
            display: none;
        }
    }

    menu {
        display: none;
    }

    .icon-wrapper {

        &:has(.hamburger-menu),
        &:has(.close) {
            display: none;
        }
    }
}

//                                                **************
// --------------------NAVIGATION-------------------------------
//                                                **************


// **************
// --------------------BUTTONS-------------------------------
// **************
button {
    background-color: transparent;
    padding: 1em 3em;
    border: themedColor(fg) 1px solid;
    border-radius: toRem(30px);
    color: themedColor(fg);

    &.primary {
        border-color: transparent;
        background-color: themedColor(primary);
    }

    &:hover {
        background-color: themedColor(fg);
        color: themedColor(bg);
        border-color: themedColor(bg);
        cursor: pointer;
    }

    &:disabled {
        background-color: $disabled;
        border: 1px solid themedColor(primary);
    }
}
//                                                **************
// --------------------BUTTONS-------------------------------
//                                                **************


// **************
// --------------------ICONS-------------------------------
// **************
.icon {
    height: toRem(24px);

    &.logo,
    &.full-logo {
        height: toRem(48px);
    }

    &.sun {
        height: toRem(30px);
    }

    &.moon {
        height: toRem(28px);
    }

    &.open-eye {
        height: toRem(20px);
    }

    &.clickable {
        &:hover {
            cursor: pointer;
            color: themedColor(fg);

            &::before {
                opacity: 1;
            }
        }

        &::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            translate: -50% -50%;
            width: 100%;
            aspect-ratio: 1;
            background-color: themedColor(icon-bg);
            opacity: 0;
            border-radius: 50%;
            box-sizing: content-box;
            padding: toRem(4px);
            pointer-events: none;
        }
    }

    &.close::before {
        padding: toRem(7px);
    }

    &.hamburger-menu::before {
        padding: toRem(5px);
    }
}

.icon-wrapper {
    position: relative;
    color: themedColor(icon)
}

.hidden,
.icon-wrapper:has(.hidden) {
    display: none;
}

//                                           **************
// --------------------ICONS-------------------------------
//                                           **************


// **************
// --------------------LINKS-------------------------------
// **************
a {
    color: themedColor(fg);
    text-decoration: none;
}

.link {
    color: themedColor(primary);

    &:hover {
        text-decoration: underline;
        text-underline-offset: toRem(2px);
    }
}
//                                           **************
// --------------------LINKS-------------------------------
//                                           **************


// **************
// --------------------FORMS-------------------------------
// **************

.form-container {
    @include flexCentre(column);
    gap: toRem(32px);
    border-radius: toRem(30px);
    background-color: themedColor(bg-contrast);
    padding: 2em 1em;
    min-width: 19.5em;
    width: min(40%, 24em);
}

form {
    @include flexCentre(column);
    gap: toRem(32px);
}

.fields-wrapper {
    @include flexCentre(column);
    gap: toRem(10px);
    width: 100%;
}

.form-wrapper {
    display: grid;
    grid-template-columns: 1fr;
    padding: 0em 1em;
    gap: toRem(32px);
    width: 100%;
}

.field-container {
    @include flexCentre(column);
    align-items: flex-start;
    gap: toRem(4px);
    width: 100%;

    >div,
    input {
        width: 100%;
    }

    input {
        border-radius: toRem(10px);
        background-color: themedColor(input-bg);
        border: none;
        padding: 0.6em 1em;
        transition: 300ms ease-in-out 100ms;

        &:focus,
        &:focus-visible {
            outline: transparent;
            border: 1px solid themedColor(fg);
        }

        &:hover {
            scale: 1.05;
        }
    }
}

.field-error {
    input {
        border: 1px solid $errorRed;

        &:focus {
            border: 1px solid $errorRed;
            outline: 1px solid themedColor(fg);
            outline-offset: toRem(2px);
        }
    }

    span {
        color: $errorRed;
        align-self: flex-end;
        text-align: end;
    }
}

.form-error {
    border: 1px solid $errorRed;
    border-radius: toRem(10px);
    width: 100%;
    padding: 1em;
    text-align: center;
    color: $errorRed;
    position: relative;

    .icon-wrapper {
        color: $errorRed;
        position: absolute;
        right: 0;
        top: 0;
        translate: 40% -40%;
        background-color: themedColor(bg-contrast);

        &::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            translate: -50% -45%;
            width: 100%;
            aspect-ratio: 1;
            background-color: themedColor(bg-contrast);
            border-radius: 50%;
            box-sizing: content-box;
            padding: toRem(3px);
            pointer-events: none;
            z-index: -1;
        }
    }
}

.password-input-wrapper {
    position: relative;

    .icon-wrapper {
        position: absolute;
        right: 0;
        top: 50%;
        translate: -40% -50%;
    }
}
//                                           **************
// --------------------FORMS-------------------------------
//                                           **************

[data-cy=loading-spinner] {
    width: toRem(24px);
    height: toRem(24px);
    border: 2px solid themedColor(fg);
    border-radius: 50%;
    border-top: none;
    border-left: none;
    animation: spin 1s linear infinite;
}

@keyframes spin {
    0% {
        transform: rotate(0);
    }
    100% {
        transform: rotate(360deg);
    }
}